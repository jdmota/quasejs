Starting...
-----------
Ambiguities in rule A, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 3 /*#string:C*/ && $ll3 === 4 /*#string:D*/ && $ff1 === 0 /* $$START$$ 3 */ && $ff2 === -1 && $ff3 === -1 is not enough to choose between:
 - [B = Rule B ()]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 3 /*#string:C*/ may lead to left recursions via these decisions:
 - [Range [1,1]]
-----------
-----------
Ambiguities in rule B, state 3, ll = 3
Condition $ll1 === 0 /*#string:O*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 3 /*#string:C*/ is not enough to choose between:
 - [Range [0,0]]
 - [$loc = Action @$getLoc($startPos)]
Condition $ll1 === 0 /*#string:O*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 3 /*#string:C*/ is not enough to choose between:
 - [Range [0,0]]
 - [$loc = Action @$getLoc($startPos)]
-----------
-----------
Ambiguities in rule C, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule child, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [$loc = Action @$getLoc($startPos)]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [$loc = Action @$getLoc($startPos)]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 1 /*#string:A*/ is not enough to choose between:
 - [$loc = Action @$getLoc($startPos)]
 - [Range [1,1]]
-----------
-----------
Ambiguities in rule Tricky1, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
Condition $ll1 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule Tricky2, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule Tricky3, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule Tricky4, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule Rec1, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule Rec2, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule Rec3, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule Rec4, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule RecTricky1, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule RecMutual1, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule EmptyOrNot, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule GLL1Follow, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 0 /*#string:O*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 1 /*#string:A*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
-----------
-----------
Ambiguities in rule GLL1Follow2, state 2, ll = 3
Condition $ll1 === 0 /*#string:O*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 0 /*#string:O*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
-----------
-----------
Ambiguities in rule GLLAuxOptional1, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 0 /*#string:O*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [$loc = Action @$getLoc($startPos)]
 - [Range [1,1]]
-----------
-----------
Ambiguities in rule follow0, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 1 /*#string:A*/ is not enough to choose between:
 - [a = Action 0]
 - [a = Action 1]
-----------
-----------
Ambiguities in rule endAux, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 3 /*#string:C*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
-----------
-----------
Ambiguities in rule predicates2, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Predicate false]
 - [Predicate true]
-----------
-----------
Ambiguities in rule $lexer, state 2, ll = 1
Condition $ll1 === -1 /*-1*/ is not enough to choose between:
 - [$13_num = Action 10]
 - [Range [-1,-1]]
Condition $ll1 === 49 /*'1'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 60 /*'<'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 65 /*'A'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 66 /*'B'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 67 /*'C'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 68 /*'D'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 69 /*'E'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 70 /*'F'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 79 /*'O'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 80 /*'P'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 83 /*'S'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 87 /*'W'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 97 /*'a'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
-----------
-----------
Ambiguities in rule A, state 5, ll = 3
Condition true may lead to left recursions via these decisions:
 - [my_obj = Action { id: 10 }]
-----------
-----------
Ambiguities in rule A, state 12, ll = 3
Condition true may lead to left recursions via these decisions:
 - [my_obj = Action { id: 10 }]
-----------
-----------
Ambiguities in rule B, state 4, ll = 3
Condition $ll1 === 0 /*#string:O*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 3 /*#string:C*/ is not enough to choose between:
 - [Range [0,0]]
 - [$loc = Action @$getLoc($startPos)]
Condition $ll1 === 0 /*#string:O*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 3 /*#string:C*/ is not enough to choose between:
 - [Range [0,0]]
 - [$loc = Action @$getLoc($startPos)]
-----------
-----------
Ambiguities in rule C, state 2, ll = 3
Condition true may lead to left recursions via these decisions:
 - [ret = Action { x: y, y: x }]
-----------
-----------
Ambiguities in rule Tricky1, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 2]
 - [Action 1]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 2]
 - [Action 1]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 1 /*#string:A*/ is not enough to choose between:
 - [Action 2]
 - [Action 1]
 - [Action 3]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [Action 2]
 - [Action 1]
 - [Action 3]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 2 /*#string:B*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 2]
 - [Action 1]
 - [Action 3]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [Action 1]
 - [Action 3]
 - [Action 2]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 3]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 3]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [Action 1]
 - [Action 3]
Condition true may lead to left recursions via these decisions:
 - [Action 1]
 - [Action 3]
Condition $ll1 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [Action 2]
 - [Action 3]
 - [Action 1]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [Action 2]
 - [Action 1]
 - [Action 3]
-----------
-----------
Ambiguities in rule Tricky1, state 3, ll = 3
Condition $ll1 === -1 /*#eof*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule Tricky1 ()]
 - [Action 10]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule Tricky1 ()]
 - [Action 10]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule Tricky1 ()]
 - [Action 10]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [Rule Tricky1 ()]
 - [Action 10]
Condition true may lead to left recursions via these decisions:
 - [Rule Tricky1 ()]
Condition $ll1 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [Rule Tricky1 ()]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [Rule Tricky1 ()]
-----------
-----------
Ambiguities in rule Tricky2, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 1 /*#string:A*/ is not enough to choose between:
 - [z = Rule Tricky2 ()]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [z = Rule Tricky2 ()]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 2 /*#string:B*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [z = Rule Tricky2 ()]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [z = Rule Tricky2 ()]
 - [Range [1,1]]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [z = Rule Tricky2 ()]
 - [$loc = Action @$getLoc($startPos)]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [z = Rule Tricky2 ()]
 - [$loc = Action @$getLoc($startPos)]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [z = Rule Tricky2 ()]
 - [$loc = Action @$getLoc($startPos)]
Condition true may lead to left recursions via these decisions:
 - [z = Rule Tricky2 ()]
Condition $ll1 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [z = Rule Tricky2 ()]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [z = Rule Tricky2 ()]
 - [Range [1,1]]
-----------
-----------
Ambiguities in rule Tricky3, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 1 /*#string:A*/ is not enough to choose between:
 - [x = Rule Tricky3 (10)]
 - [z = Rule Tricky3 (30)]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [z = Rule Tricky3 (30)]
 - [x = Rule Tricky3 (10)]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [x = Rule Tricky3 (10)]
 - [z = Rule Tricky3 (30)]
 - [Range [1,1]]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [z = Rule Tricky3 (30)]
 - [x = Rule Tricky3 (10)]
 - [$loc = Action @$getLoc($startPos)]
Condition true may lead to left recursions via these decisions:
 - [x = Rule Tricky3 (10)]
 - [z = Rule Tricky3 (30)]
Condition $ll1 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [x = Rule Tricky3 (10)]
 - [z = Rule Tricky3 (30)]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [x = Rule Tricky3 (10)]
 - [z = Rule Tricky3 (30)]
 - [Range [1,1]]
-----------
-----------
Ambiguities in rule Tricky4, state 2, ll = 3
Condition $ll1 === -1 /*#eof*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule Tricky4 ()]
 - [Range [-1,-1]]
Condition $ll1 === -1 /*#eof*/ && $ll2 === -1 /*#eof*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [Rule Tricky4 ()]
 - [Range [-1,-1]]
Condition $ll1 === -1 /*#eof*/ && $ll2 === 2 /*#string:B*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule Tricky4 ()]
 - [Range [-1,-1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule Tricky4 ()]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule Tricky4 ()]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 1 /*#string:A*/ is not enough to choose between:
 - [Rule Tricky4 ()]
 - [Range [1,1]]
Condition true may lead to left recursions via these decisions:
 - [Rule Tricky4 ()]
Condition $ll1 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [Rule Tricky4 ()]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [Rule Tricky4 ()]
 - [Range [1,1]]
-----------
-----------
Ambiguities in rule Rec2, state 2, ll = 3
Condition true may lead to left recursions via these decisions:
 - [Rule Rec2 ()]
-----------
-----------
Ambiguities in rule Rec3, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ is not enough to choose between:
 - [Rule Rec3 ()]
 - [Range [1,1]]
Condition true may lead to left recursions via these decisions:
 - [Rule Rec3 ()]
-----------
-----------
Ambiguities in rule Rec4, state 2, ll = 3
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 1 /*#string:A*/ is not enough to choose between:
 - [Rule Rec4 ()]
 - [Range [2,2]]
Condition true may lead to left recursions via these decisions:
 - [Rule Rec4 ()]
-----------
-----------
Ambiguities in rule RecTricky1, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 1 /*#string:A*/ is not enough to choose between:
 - [Action 1]
 - [Action 3]
 - [Action 2]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [Action 1]
 - [Action 3]
 - [Action 2]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 2 /*#string:B*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
 - [Action 3]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
 - [Action 3]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 3]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 3]
 - [Action 1]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [Action 3]
 - [Action 1]
Condition true may lead to left recursions via these decisions:
 - [Action 1]
 - [Action 3]
Condition $ll1 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [Action 1]
 - [Action 3]
 - [Action 2]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [Action 1]
 - [Action 3]
 - [Action 2]
-----------
-----------
Ambiguities in rule RecTricky1, state 3, ll = 3
Condition $ll1 === -1 /*#eof*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule RecTricky2 ()]
 - [Action 10]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule RecTricky2 ()]
 - [Action 10]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule RecTricky2 ()]
 - [Action 10]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [Rule RecTricky2 ()]
 - [Action 10]
Condition true may lead to left recursions via these decisions:
 - [Rule RecTricky2 ()]
-----------
-----------
Ambiguities in rule RecTricky3, state 2, ll = 3
Condition true may lead to left recursions via these decisions:
 - [Rule RecTricky2 ()]
-----------
-----------
Ambiguities in rule RecMutual1, state 2, ll = 3
Condition $ll1 === 2 /*#string:B*/ is not enough to choose between:
 - [Rule RecMutual2 ()]
 - [Range [2,2]]
Condition true may lead to left recursions via these decisions:
 - [Rule RecMutual2 ()]
-----------
-----------
Ambiguities in rule RecMutual2, state 2, ll = 3
Condition $ll1 === 3 /*#string:C*/ is not enough to choose between:
 - [Rule RecMutual1 ()]
 - [Range [3,3]]
Condition true may lead to left recursions via these decisions:
 - [Rule RecMutual1 ()]
-----------
-----------
Ambiguities in rule EmptyOrNot, state 2, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$loc = Action @$getLoc($startPos)]
-----------
-----------
Ambiguities in rule TrickyAfterEmpty, state 2, ll = 3
Condition true may lead to left recursions via these decisions:
 - [Rule EmptyOrNot ()]
Condition $ll1 === 0 /*#string:O*/ may lead to left recursions via these decisions:
 - [Rule EmptyOrNot ()]
-----------
REF-BENCHMARK: 222.259ms
-----------
Ambiguities in rule A, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 3 /*#string:C*/ && $ll3 === 4 /*#string:D*/ && $ff1 === 0 /* $$START$$ 3 */ && $ff2 === -1 && $ff3 === -1 is not enough to choose between:
 - [B = Rule B ()]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 3 /*#string:C*/ may lead to left recursions via these decisions:
 - [Range [1,1]]
-----------
-----------
Ambiguities in rule B, state 3, ll = 3
Condition $ll1 === 0 /*#string:O*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 3 /*#string:C*/ is not enough to choose between:
 - [Range [0,0]]
 - [$loc = Action @$getLoc($startPos)]
Condition $ll1 === 0 /*#string:O*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 3 /*#string:C*/ is not enough to choose between:
 - [Range [0,0]]
 - [$loc = Action @$getLoc($startPos)]
-----------
-----------
Ambiguities in rule C, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule child, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [$loc = Action @$getLoc($startPos)]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [$loc = Action @$getLoc($startPos)]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 1 /*#string:A*/ is not enough to choose between:
 - [$loc = Action @$getLoc($startPos)]
 - [Range [1,1]]
-----------
-----------
Ambiguities in rule Tricky1, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
Condition $ll1 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule Tricky2, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule Tricky3, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule Tricky4, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule Rec1, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule Rec2, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule Rec3, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule Rec4, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule RecTricky1, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule RecMutual1, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule EmptyOrNot, state 1, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$startPos = Action @$getPos()]
-----------
-----------
Ambiguities in rule GLL1Follow, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 0 /*#string:O*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 1 /*#string:A*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
-----------
-----------
Ambiguities in rule GLL1Follow2, state 2, ll = 3
Condition $ll1 === 0 /*#string:O*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 0 /*#string:O*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
-----------
-----------
Ambiguities in rule GLLAuxOptional1, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 0 /*#string:O*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [$loc = Action @$getLoc($startPos)]
 - [Range [1,1]]
-----------
-----------
Ambiguities in rule follow0, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 1 /*#string:A*/ is not enough to choose between:
 - [a = Action 0]
 - [a = Action 1]
-----------
-----------
Ambiguities in rule endAux, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 3 /*#string:C*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
-----------
-----------
Ambiguities in rule predicates2, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Predicate false]
 - [Predicate true]
-----------
-----------
Ambiguities in rule $lexer, state 2, ll = 1
Condition $ll1 === -1 /*-1*/ is not enough to choose between:
 - [$13_num = Action 10]
 - [Range [-1,-1]]
Condition $ll1 === 49 /*'1'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 60 /*'<'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 65 /*'A'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 66 /*'B'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 67 /*'C'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 68 /*'D'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 69 /*'E'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 70 /*'F'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 79 /*'O'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 80 /*'P'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 83 /*'S'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 87 /*'W'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
Condition $ll1 === 97 /*'a'*/ is not enough to choose between:
 - [$startMarker = Action @$startText()]
 - [$13_num = Action 10]
-----------
-----------
Ambiguities in rule A, state 5, ll = 3
Condition true may lead to left recursions via these decisions:
 - [my_obj = Action { id: 10 }]
-----------
-----------
Ambiguities in rule A, state 12, ll = 3
Condition true may lead to left recursions via these decisions:
 - [my_obj = Action { id: 10 }]
-----------
-----------
Ambiguities in rule B, state 4, ll = 3
Condition $ll1 === 0 /*#string:O*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 3 /*#string:C*/ is not enough to choose between:
 - [Range [0,0]]
 - [$loc = Action @$getLoc($startPos)]
Condition $ll1 === 0 /*#string:O*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 3 /*#string:C*/ is not enough to choose between:
 - [Range [0,0]]
 - [$loc = Action @$getLoc($startPos)]
-----------
-----------
Ambiguities in rule C, state 2, ll = 3
Condition true may lead to left recursions via these decisions:
 - [ret = Action { x: y, y: x }]
-----------
-----------
Ambiguities in rule Tricky1, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 1 /*#string:A*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
 - [Action 3]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
 - [Action 3]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 2 /*#string:B*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
 - [Action 3]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
 - [Action 3]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 3]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 3]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [Action 1]
 - [Action 3]
Condition true may lead to left recursions via these decisions:
 - [Action 1]
 - [Action 3]
Condition $ll1 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [Action 1]
 - [Action 2]
 - [Action 3]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [Action 1]
 - [Action 2]
 - [Action 3]
-----------
-----------
Ambiguities in rule Tricky1, state 3, ll = 3
Condition $ll1 === -1 /*#eof*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule Tricky1 ()]
 - [Action 10]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule Tricky1 ()]
 - [Action 10]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule Tricky1 ()]
 - [Action 10]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [Rule Tricky1 ()]
 - [Action 10]
Condition true may lead to left recursions via these decisions:
 - [Rule Tricky1 ()]
Condition $ll1 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [Rule Tricky1 ()]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [Rule Tricky1 ()]
-----------
-----------
Ambiguities in rule Tricky2, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 1 /*#string:A*/ is not enough to choose between:
 - [z = Rule Tricky2 ()]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [z = Rule Tricky2 ()]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 2 /*#string:B*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [z = Rule Tricky2 ()]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [z = Rule Tricky2 ()]
 - [Range [1,1]]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [z = Rule Tricky2 ()]
 - [$loc = Action @$getLoc($startPos)]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [z = Rule Tricky2 ()]
 - [$loc = Action @$getLoc($startPos)]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [z = Rule Tricky2 ()]
 - [$loc = Action @$getLoc($startPos)]
Condition true may lead to left recursions via these decisions:
 - [z = Rule Tricky2 ()]
Condition $ll1 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [z = Rule Tricky2 ()]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [z = Rule Tricky2 ()]
 - [Range [1,1]]
-----------
-----------
Ambiguities in rule Tricky3, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 1 /*#string:A*/ is not enough to choose between:
 - [x = Rule Tricky3 (10)]
 - [z = Rule Tricky3 (30)]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [x = Rule Tricky3 (10)]
 - [z = Rule Tricky3 (30)]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [x = Rule Tricky3 (10)]
 - [z = Rule Tricky3 (30)]
 - [Range [1,1]]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [x = Rule Tricky3 (10)]
 - [z = Rule Tricky3 (30)]
 - [$loc = Action @$getLoc($startPos)]
Condition true may lead to left recursions via these decisions:
 - [x = Rule Tricky3 (10)]
 - [z = Rule Tricky3 (30)]
Condition $ll1 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [x = Rule Tricky3 (10)]
 - [z = Rule Tricky3 (30)]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [x = Rule Tricky3 (10)]
 - [z = Rule Tricky3 (30)]
 - [Range [1,1]]
-----------
-----------
Ambiguities in rule Tricky4, state 2, ll = 3
Condition $ll1 === -1 /*#eof*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule Tricky4 ()]
 - [Range [-1,-1]]
Condition $ll1 === -1 /*#eof*/ && $ll2 === -1 /*#eof*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [Rule Tricky4 ()]
 - [Range [-1,-1]]
Condition $ll1 === -1 /*#eof*/ && $ll2 === 2 /*#string:B*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule Tricky4 ()]
 - [Range [-1,-1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule Tricky4 ()]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === -1 /*#eof*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [Rule Tricky4 ()]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule Tricky4 ()]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 1 /*#string:A*/ is not enough to choose between:
 - [Rule Tricky4 ()]
 - [Range [1,1]]
Condition true may lead to left recursions via these decisions:
 - [Rule Tricky4 ()]
Condition $ll1 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [Rule Tricky4 ()]
 - [Range [1,1]]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [Rule Tricky4 ()]
 - [Range [1,1]]
-----------
-----------
Ambiguities in rule Rec2, state 2, ll = 3
Condition true may lead to left recursions via these decisions:
 - [Rule Rec2 ()]
-----------
-----------
Ambiguities in rule Rec3, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ is not enough to choose between:
 - [Rule Rec3 ()]
 - [Range [1,1]]
Condition true may lead to left recursions via these decisions:
 - [Rule Rec3 ()]
-----------
-----------
Ambiguities in rule Rec4, state 2, ll = 3
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 1 /*#string:A*/ is not enough to choose between:
 - [Rule Rec4 ()]
 - [Range [2,2]]
Condition true may lead to left recursions via these decisions:
 - [Rule Rec4 ()]
-----------
-----------
Ambiguities in rule RecTricky1, state 2, ll = 3
Condition $ll1 === 1 /*#string:A*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 1 /*#string:A*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
 - [Action 3]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
 - [Action 3]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 2 /*#string:B*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
 - [Action 3]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [Action 1]
 - [Action 2]
 - [Action 3]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 3]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Action 1]
 - [Action 3]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [Action 1]
 - [Action 3]
Condition true may lead to left recursions via these decisions:
 - [Action 1]
 - [Action 3]
Condition $ll1 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [Action 1]
 - [Action 2]
 - [Action 3]
Condition $ll1 === 1 /*#string:A*/ && $ll2 === 1 /*#string:A*/ may lead to left recursions via these decisions:
 - [Action 1]
 - [Action 2]
 - [Action 3]
-----------
-----------
Ambiguities in rule RecTricky1, state 3, ll = 3
Condition $ll1 === -1 /*#eof*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule RecTricky2 ()]
 - [Action 10]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === -1 /*#eof*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule RecTricky2 ()]
 - [Action 10]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === -1 /*#eof*/ is not enough to choose between:
 - [Rule RecTricky2 ()]
 - [Action 10]
Condition $ll1 === 2 /*#string:B*/ && $ll2 === 2 /*#string:B*/ && $ll3 === 2 /*#string:B*/ is not enough to choose between:
 - [Rule RecTricky2 ()]
 - [Action 10]
Condition true may lead to left recursions via these decisions:
 - [Rule RecTricky2 ()]
-----------
-----------
Ambiguities in rule RecTricky3, state 2, ll = 3
Condition true may lead to left recursions via these decisions:
 - [Rule RecTricky2 ()]
-----------
-----------
Ambiguities in rule RecMutual1, state 2, ll = 3
Condition $ll1 === 2 /*#string:B*/ is not enough to choose between:
 - [Rule RecMutual2 ()]
 - [Range [2,2]]
Condition true may lead to left recursions via these decisions:
 - [Rule RecMutual2 ()]
-----------
-----------
Ambiguities in rule RecMutual2, state 2, ll = 3
Condition $ll1 === 3 /*#string:C*/ is not enough to choose between:
 - [Rule RecMutual1 ()]
 - [Range [3,3]]
Condition true may lead to left recursions via these decisions:
 - [Rule RecMutual1 ()]
-----------
-----------
Ambiguities in rule EmptyOrNot, state 2, ll = 3
Condition true may lead to left recursions via these decisions:
 - [$loc = Action @$getLoc($startPos)]
-----------
-----------
Ambiguities in rule TrickyAfterEmpty, state 2, ll = 3
Condition true may lead to left recursions via these decisions:
 - [Rule EmptyOrNot ()]
Condition $ll1 === 0 /*#string:O*/ may lead to left recursions via these decisions:
 - [Rule EmptyOrNot ()]
-----------
BENCHMARK: 61.525ms
